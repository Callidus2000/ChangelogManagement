#          YAML Reference Guide: https://www.appveyor.com/docs/appveyor-yml/
# Environmental Variables Guide: https://www.appveyor.com/docs/environment-variables/
#                YAML Validator: https://ci.appveyor.com/tools/validate-yaml

environment:
  GitName: "Nate Scherer"
  GitEmail: "376408+natescherer@users.noreply.github.com"
  GitHubKey:
    secure: mhTvr/vsjuMnWB6+KlvCZ7fDxj7riYN6PdXZFGlogv9OL0G2M3K/7OjxiggarWvi
  NuGetApiKey:
    secure: pzzBHe3dds15o5jYQLKlsuxO3JbV9rkccb1PwKigFP2vfp9vC579E8KSGhR1GQAA
  PowerShellModules: ChangelogManagement,InvokeBuild,Pester,platyPS,MarkdownToHtml,BuildHelpers,PowerShellGet

image:
  - Visual Studio 2017
  - Ubuntu1804

build: off

skip_tags: true

skip_commits:
  files:
    - README.md
  message: /updated readme.*|update docs.*|Release via Appveyor.*/

init:
  - ps: if ($PSVersionTable.PSVersion.Major -eq 5) {$TempDir = $env:TEMP}
  - pwsh: if ($IsWindows) {$TempDir = $env:TEMP}
  - pwsh: if ($IsLinux) {$TempDir = "/tmp"}
  - pwsh: if ($IsMacOS) {$TempDir = $env:TMPDIR}
  - ps: git config --global user.name $($env:GitName)
  - ps: git config --global user.email $($env:GitEmail)
  - ps: git config --global core.autocrlf true
  - ps: git config --global credential.helper store
  - ps: Add-Content "$HOME\.git-credentials" "https://$($env:GitHubKey):x-oauth-basic@github.com`n"
  - ps: $ErrorActionPreference = "Stop"
  - pwsh: $ErrorActionPreference = "Stop"
  - ps: if ($PSVersionTable.PSVersion.Major -eq 5) {Install-Module -Name $($env:PowerShellModules.split(",")) -Force -SkipPublisherCheck}
  - pwsh: if ($IsWindows) {Install-Module -Name $($env:PowerShellModules.split(",")) -Force -SkipPublisherCheck -AllowClobber}
  - pwsh: if ($IsLinux) {Install-Module -Name $($env:PowerShellModules.split(",")) -Force -SkipPublisherCheck -AllowClobber -Scope CurrentUser}
  - ps: $NextVer = Get-NextNugetPackageVersion -PackageSourceUrl https://www.powershellgallery.com/api/v2/ -Name $env:APPVEYOR_PROJECT_NAME
  - ps: if ($env:APPVEYOR_REPO_COMMIT_MESSAGE -like "!Deploy*") {$ReleaseVersion = $env:APPVEYOR_REPO_COMMIT_MESSAGE.split(" ")[1]}
  - ps: if ($env:APPVEYOR_REPO_COMMIT_MESSAGE -like "!Deploy*") {$env:GitHubTag = "v$ReleaseVersion"}
  - ps: if ($env:APPVEYOR_REPO_COMMIT_MESSAGE -like "!Deploy*") {$env:DeployMode = "true"}
  - ps: if ($env:APPVEYOR_REPO_COMMIT_MESSAGE -notlike "!Deploy*") {$ReleaseVersion = $NextVer.ToString() + "-alpha" + $env:APPVEYOR_BUILD_NUMBER}
  - ps: Update-AppveyorBuild -Version $ReleaseVersion
  - ps: $GitHubBase = "https://github.com/" + $env:APPVEYOR_REPO_NAME
  - ps: $LinkPattern = @{FirstRelease="$GitHubBase/tree/v{CUR}";NormalRelease="$GitHubBase/compare/v{PREV}..v{CUR}";Unreleased="$GitHubBase/compare/v{CUR}..HEAD"}
  - ps: $env:ReleasePackageFile = "out\$($env:APPVEYOR_PROJECT_NAME)-v$($ReleaseVersion).zip"

for:
  -
    matrix:
      only:
        - image: Visual Studio 2017
    build_script:
      - ps: Write-Host "Visual Studio 2017" -ForegroundColor Yellow
      - ps: Write-Host "Starting Build..."
      - ps: Invoke-Build -Version $ReleaseVersion -LinkPattern $LinkPattern
    after_build:
      - ps: $env:ChangelogData = ((((Get-ChangelogData).Released[0].RawData -replace "## \[.*","") -replace "###","").Trim()) -replace [System.Environment]::NewLine,"\n"
      - ps: Compress-Archive -Path ".\*" -DestinationPath "$TempDir\state.zip"
      - ps: Move-Item -Path "$TempDir\state.zip" -Destination "out\"
      - ps: Compress-Archive -Path "out\$env:APPVEYOR_PROJECT_NAME" -DestinationPath $env:ReleasePackageFile
    test_script:
      - ps: Write-Host "Starting Tests on Windows Powershell..."
      - ps: $res = Invoke-Pester -Path ".\test" -OutputFormat NUnitXml -OutputFile "out\TestsResults.xml" -PassThru
      - ps: Invoke-RestMethod -Uri "https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)" -Method Post -InFile "out\TestsResults.xml" -ContentType "multipart/form-data"
      - ps: if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}
      - pwsh: Write-Host "Starting Tests on PowerShell Core..."
      - pwsh: $res = Invoke-Pester -Path ".\test" -OutputFormat NUnitXml -OutputFile "out\TestsResults.xml" -PassThru
      - pwsh: Invoke-RestMethod -Uri "https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)" -Method Post -InFile "out\TestsResults.xml" -ContentType "multipart/form-data"
      - pwsh: if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}
    artifacts:
      - path: $(ReleasePackageFile)
        name: ReleasePackage
      - path: out\state.zip
        name: BuildState
    before_deploy:
      - ps: Write-Host "Starting Deployment Evaluation..."
      - ps: . .\appveyordeploy.ps1
    deploy:
      tag: $(GitHubTag)
      description: $(ChangelogData)
      provider: GitHub
      auth_token: $(GitHubKey)
      artifact: ReleasePackage
      draft: false
      prerelease: false
      on:
        branch: master
        DeployMode: true
  -
    matrix:
      only:
        - image: Ubuntu1804
    build_script:
      - pwsh: Write-Host Ubuntu1804 -ForegroundColor Yellow
      - pwsh: Write-Host "Starting Build..."
      - pwsh: Invoke-Build -Version $ReleaseVersion -LinkPattern $LinkPattern
    after_build:
      - pwsh: Compress-Archive -Path ".\*" -DestinationPath "$TempDir\state.zip"
      - pwsh: Move-Item -Path "$TempDir\state.zip" -Destination "out\"
      - pwsh: Compress-Archive -Path "out\$env:APPVEYOR_PROJECT_NAME" -DestinationPath $env:ReleasePackageFile
    test_script:
      - pwsh: Write-Host "Starting Tests on Powershell Core..."
      - pwsh: $res = Invoke-Pester -Path ".\test" -OutputFormat NUnitXml -OutputFile "out\TestsResults.xml" -PassThru
      - pwsh: Invoke-RestMethod -Uri "https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)" -Method Post -InFile "out\TestsResults.xml" -ContentType "multipart/form-data"
      - pwsh: if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}
    artifacts:
      - path: $(ReleasePackageFile)
        name: ReleasePackage
      - path: out\state.zip
        name: BuildState